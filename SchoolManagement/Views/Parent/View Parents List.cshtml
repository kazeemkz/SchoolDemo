@model PagedList.IPagedList<SchoolManagement.Model.Parent>

@{
    ViewBag.Title = "View Parents List";
}

<h4>PARENTS LIST</h4>
<br />


@using (Html.BeginForm())
{
    <fieldset>
        <legend>Search Box</legend>

        <table>

            @if (!(User.IsInRole("Parent")))
            {
           
                <tr>

                    <td>
                        <b>First Name:</b>
                    </td>
                    <td>
                        @Html.TextBox("first") &nbsp;
                    </td>
                </tr>
                <tr>

                    <td>
                        <b>Middle Name:</b>
                    </td>
                    <td>
                        @Html.TextBox("middle") &nbsp;
                    </td>
                </tr>
                <tr>

                    <td>
                        <b>Last Name:</b>
                    </td>
                    <td>
                        @Html.TextBox("last") &nbsp;
                    </td>
                </tr>

            }


        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>
   
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover table-bordered table-condensed">
    <tr>
        <th>
            <b>First Name</b>
        </th>
        <th>
            <b>Middle Name</b>
        </th>
        <th>
            <b>Last Name</b>
        </th>
        <th>
            <b>Reg. Date.</b>
        </th>
        <th>
            <b>User ID</b>
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>

            <td>
                  @Html.ActionLink("Edit", "Edit", new { id = SchoolManagement.Models.Encript.EncryptString(item.ParentID .ToString(),true)}, null)|
@*                @Html.ActionLink("Edit", "Edit", new { id = item.ParentID }) |*@
                  @Html.ActionLink("Details", "Details", new { id = SchoolManagement.Models.Encript.EncryptString(item.ParentID .ToString(),true)}, null)|
@*                @Html.ActionLink("Details", "Details", new { id = item.ParentID }) |*@
              @*  @Html.ActionLink("Delete", "Delete", new { id = item.ParentID })*@
                  @Html.ActionLink("Delete", "Delete", new { id = SchoolManagement.Models.Encript.EncryptString(item.ParentID .ToString(),true)}, null)|
            </td>
        </tr>
    }

</table>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>
