@*@model IEnumerable<SchoolManagement.Model.SchoolFeePayment>*@
@model PagedList.IPagedList<SchoolManagement.Model.SchoolFeePayment>
@{
    ViewBag.Title = "Index";
}

<br />
<h4>SCHOOL FEES PAYMENT - APPROVAL</h4>

@using (Html.BeginForm())
{
    
    <fieldset>
        <legend>Search Box</legend>

        <table>
             <tr>

                <td>
                    <b>Approved:</b>
                </td>
                <td>
                    @Html.DropDownList("ApprovedString", SchoolManagement.Model.LevelDictionary.Approved)
                </td>
            </tr>


          


            <tr>


                <td>
                    <b>Find by Class:</b>
                </td>
                <td>
                    @Html.DropDownList("LevelString", SchoolManagement.Model.LevelDictionary.LevelDicoList)
                    &nbsp;
                </td>
            </tr>


           @*  <tr>

                <td>
                    <b>Class Arm:</b>
                </td>
                <td>
                    @Html.DropDownList("arm", new SelectList((System.Collections.IEnumerable)ViewData["arm"], "Value", "Text"))
                </td>
            </tr>
            <tr>

                <td>
                    <b>Find by name:</b>
                </td>
                <td>
                    @Html.TextBox("name", ViewBag.CurrentFilter as string) &nbsp;
                </td>
            </tr>*@


            <tr>


                <td>
                    <b>Find by Student ID:</b>
                </td>
                <td>
                    @Html.TextBox("StudentIDString", ViewBag.CurrentFilter as string)
                    &nbsp;
                </td>
            </tr>


           <tr>

                <td>
                    <b>Date From: </b>
                </td>
                <td>
                    @Html.TextBox("dateFrom")
                    &nbsp;

                </td>
            </tr>

              <tr>

                <td>
                    <b>DateTo: </b>
                </td>
                <td>
                   @Html.TextBox("dateTo")
                    &nbsp;

                </td>
            </tr>


        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>
}

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
 <table class="table table-striped table-hover table-bordered table-condensed">
    <tr>
        <th>
            <b>School Fees Type</b>
        </th>
        <th>
            <b>Class</b>
        </th>
        <th>
           <b>Student ID</b>
        </th>
     @*   <th>
           <b>Cost(#)</b>
        </th>
        <th>
           <b>Owing(#)</b>
        </th>*@
        <th>
            <b>Date Paid</b>
        </th>
        <th>
          <b>Paid(#)</b>
        </th>
        <th>
            <b>Term</b>
        </th>
        <th>
         <b>Entered By</b>
        </th>
        <th>
           <b>Payment Method</b>
        </th>
        <th>
          <b>Teller No</b>
        </th>
        <th>
           <b>Cheque No</b>
        </th>
        <th>
           <b>Bank Draft No</b>
        </th>
        <th>
           <b>POS Transaction No</b>
        </th>
        <th>
           <b>Approved?</b>
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TheSchoolFeesType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Level)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentID)
        </td>
       @* <td>
            @Html.DisplayFor(modelItem => item.Cost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Owing)
        </td>*@
        <td>
            @string.Format("{0:dd-MMM-yyyy, hh:mm tt}",item.DatePaid)
          @*  @Html.DisplayFor(modelItem => item.DatePaid)*@
        </td>
        <td>

            @Html.DisplayFor(modelItem => item.Paid)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Term)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnteredBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentMethod)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TellerNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChequeNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BankDraftNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.POSTransactionNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Approved)
        </td>
        @if (item.Approved != true)
        {
        <td>
             @using (Html.BeginForm("Edit2", "ApproveSchoolFeePayment", new { id = item.SchoolFeePaymentID },FormMethod.Post))
        {
            <input type="submit" value="Approve" class="btn-primary"/>
        }
           | @Html.ActionLink("Edit Entry", "Edit", new { id=item.SchoolFeePaymentID }) 
           @* @Html.ActionLink("Details", "Details", new { id=item.SchoolFeePaymentID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.SchoolFeePaymentID })*@
        </td>
        }
    </tr>
}

</table>

<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>

@section Scripts {
      <script src="~/Scripts/jquery-ui-1.8.24.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        //$("#button1").button();
        //$("#button").button();


        //$("#tabs").tabs().width("750px");
        //$("#tabs1").tabs().width("750px");


        //$("#accordion").accordion().width("235px");




        $("#dateTo").datepicker({
            changeMonth: true,
            changeYear: true,
            //dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });
        $("#dateFrom").datepicker({
            changeMonth: true,
            changeYear: true,
            //dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });
    </script>
}
