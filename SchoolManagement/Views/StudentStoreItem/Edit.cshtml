@model SchoolManagement.Models.StudentItemViewModel

@{
    ViewBag.Title = "Sell Store Items";
    //Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}

<h3>Sell Store Items to @Model.StudentName with ID-@Model.StudentID</h3>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Record of @Model.StudentName ( <b>Student ID -@Model.StudentID</b>)
        </legend>
        <b>Select Term</b>
        @Html.DropDownListFor(model => model.Term, SchoolManagement.Model.LevelDictionary.TermWithNull)
        <table class="table table-striped table-hover table-bordered table-condensed">

            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Size</th>
                    <th>Amount(#)</th>
                    <th>Q.In Store</th>
                    <th>Q. Needed</th>
                    <th>Sum</th>
                </tr>
            </thead>

            @Html.HiddenFor(m => Model.StudentID)
            @Html.HiddenFor(m => Model.Level)
            @Html.HiddenFor(m => Model.StudentName)
            @Html.HiddenFor(m => Model.TotalCost)
            @for (int k = 0; k < Model.StudentStoreItem.Count(); k++)
            {
                <tbody>
                    <tr>

                        <td>
                            @Html.DisplayFor(m => Model.StudentStoreItem[k].ItemName)
                            @Html.HiddenFor(m => Model.StudentStoreItem[k].ItemName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => Model.StudentStoreItem[k].Size)
                            @Html.HiddenFor(m => Model.StudentStoreItem[k].Size)
                        </td>
                        <td class="price">
                            @Html.DisplayFor(m => Model.StudentStoreItem[k].Amount)
                            @Html.HiddenFor(m => Model.StudentStoreItem[k].Amount)
                        </td>

                        <td class="quantity">
                            @Html.DisplayFor(m => Model.StudentStoreItem[k].Quanity)
                            @*  @Html.TextBoxFor(m => Model.StudentStoreItem[k].Quanity) *@
                            @Html.HiddenFor(m => Model.StudentStoreItem[k].Quanity)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => Model.StudentStoreItem[k].QuantityNeeded, new { style = "width:50px", @class = "qty" })
                            @Html.HiddenFor(m => Model.StudentStoreItem[k].QuantityNeeded, new { style = "width:50px", @class = "qty" })
                        </td>

                        @* <td>*@
                        @*  @Html.DisplayFor(m => Model.StudentStoreItem[k].Quanity)*@
                        @*  @Html.TextBoxFor(m => Model.StudentStoreItem[k].Quanity) *@
                        @Html.HiddenFor(m => Model.StudentStoreItem[k].StoreID)
                        @* </td>*@

                        <td class='sum'>0</td>
                    </tr>

                </tbody>
            }
            @*  <tr>
                <td><b>Total (#)</b></td>
                <td id='total'>
            </tr>*@
        </table>
        <br />
        <table class="table table-striped table-hover table-bordered table-condensed">
            <tr>
                <td style="width: 10%"><b>Total (#)</b></td>
                <td id='total'>
            </tr>
        </table>
        <br />
        <br />
        <p>
            <input type="submit" value="Buy Now" id="buyNow" class="btn-primary" />    
        </p>
       @* <div id="button2">
            @Html.ActionLink("Back to List", "Index")
        </div>*@
    </fieldset>
}
@Html.ActionLink("Back to List", "Index2","PrimarySchoolStudent")


@section Scripts {
    @* <script src="~/Scripts/jquery-1.6.2.js"></script>
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")*@

    <script>
        $(document).ready(function () {
            $("#button2").button();
            $("#tabs").tabs().width("900px");
            $("#accordion").accordion().width("235px");

            $('input:submit').click(function () {

                var theValeu = $("#Term").val();
                //  alert(theValeu);
                if (theValeu == "") {
                    alert("Select a Term First");
                    return false;

                }



                //var parent = $(".qty").parents('tr');
                //var price = $('.price', parent);
                //var sum = $('.sum', parent);
                //var quantity = $('.quanity', parent);
                //var quanityneeded = $('.quanityneeded', parent);
                //if (parent > quantity) {
                //    alert("Select a Value Less than Quantity in Store");
                //    return false;

                //}
                //var value = parseInt(this.value) * parseFloat(price.get(0).innerHTML || 0);
            });




            //$("#button").button();
            // $(".kk").k(function () { alert($(".qty").val()); });

            function getTotal() {
                var total = 0;
                $('.sum').each(function () {
                    total += parseFloat(this.innerHTML)
                });

                $('#total').text(total);
                $("#TotalCost").val(total);
                // alert($("#TotalCost").val());
            }

            getTotal();

            $(".qty").live('keyup', function () {

                var parent = $(this).parents('tr');
                var price = $('.price', parent);
                var sum = $('.sum', parent);
                var value = parseInt(this.value) * parseFloat(price.get(0).innerHTML || 0);
                sum.text(value);
                getTotal();
            });
            $("#buyNow").click(function () {
                var theOverallTotal = $('#TotalCost').val();

                if (theOverallTotal == 0) {
                    alert("Total Cannot be Zero!");
                    return false;

                }

                if (theOverallTotal < 0) {
                    alert("Total Cannot be less than Zero!");
                    return false;

                }

            });




        });
    </script>

}
