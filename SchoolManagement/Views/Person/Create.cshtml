@model SchoolManagement.Model.Person

@{
    ViewBag.Title = "Create";
}

<h4></h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>MEMBERSHIP FORM</legend>

        @*  <div class="editor-label">*@
        @Html.LabelFor(model => model.FirstName)
        @* </div>*@
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MiddleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MiddleName)
            @Html.ValidationMessageFor(model => model.MiddleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sex)
        </div>
        <div class="editor-field">
            @* @Html.EditorFor(model => model.Sex)*@
            @Html.DropDownListFor(model => model.Sex, SchoolManagement.Model.ViewListClass.SexList)
            @Html.ValidationMessageFor(model => model.Sex)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MobileNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MobileNumber)
            @Html.ValidationMessageFor(model => model.MobileNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RecommendedUserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RecommendedUserID)
            @Html.ValidationMessageFor(model => model.RecommendedUserID)
        </div>


        <fieldset>
            <legend>USER NAME AND PASSWORD INFORMATION</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.UserName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Password)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </fieldset>


        <p>
            <input class="btn-primary" type="submit" value="Submit" />
        </p>
    </fieldset>
}

@*<div>
    
    @Html.ActionLink("Back to List", "Index", new { @class="btn-primary"})
</div>*@

@section Scripts {
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
   @* @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(Document).ready(function () {
            $("#DOB").datepicker({
                changeMonth: true,
                changeYear: true,
                //dateFormat: 'mm/dd/yy',
                gotoCurrent: true
            });
        });

    </script>*@
}
