@*@model IEnumerable<SchoolManagement.Model.PrimarySchoolStudent>*@
@model PagedList.IPagedList<SchoolManagement.Model.TermRegistration>
@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}

<h4>STUDENTS SCHOOL FEES PAYMENT</h4>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@using (Html.BeginForm())
{
      @Html.Hidden("printQuery")
    <fieldset>
        <legend>Search Box</legend>

        <table>
            <tr>

                <td>
                    <b>Term:</b>
                </td>
                <td>
                    @Html.DropDownList("term", SchoolManagement.Model.LevelDictionary.TermWithNullRegistration)
                </td>
            </tr>
            <tr>

                <td>
                    <b>Session:</b>
                </td>
                <td>
                    @Html.DropDownList("session", SchoolManagement.Model.LevelDictionary.SessionList)
                </td>
            </tr>
            <tr>


                <td>
                    <b>Find by Class:</b>
                </td>
                <td>
                    @Html.DropDownList("levelString", SchoolManagement.Model.LevelDictionary.LevelDicoList)
                    &nbsp;
                </td>
            </tr>


            <tr>

                <td>
                    <b>Find by Sex: </b>
                </td>
                <td>
                    @Html.DropDownList("SexString", SchoolManagement.Model.SexDictionary.SexDicoList)
                    &nbsp;

                </td>
            </tr>




            @*  <tr>

                    <td>
                        <b>Class Arm:</b>
                    </td>
                    <td>
                        @Html.DropDownList("arm", new SelectList((System.Collections.IEnumerable)ViewData["arm"], "Value", "Text"))
                    </td>
                </tr>*@
            @*  <tr>

                    <td>
                        <b>Find by name:</b>
                    </td>
                    <td>
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
                    </td>
                </tr>*@


            <tr>

                @if (User.IsInRole("Parent"))
                {
                    <td>
                        <b>Find by Student ID:</b>
                    </td>
                    <td>
                        @Html.DropDownList("StudentIDString", new SelectList((System.Collections.IEnumerable)ViewData["studentIds"], "Value", "Text"))
                        @*@Html.TextBox("StudentIDString", ViewBag.CurrentFilter as string)*@
                        &nbsp;
                    </td>
                }
                else
                {
                    <td>
                        <b>Find by Student ID:</b>
                    </td>
                    <td>
                        @Html.TextBox("StudentIDString", ViewBag.CurrentFilter as string)
                        &nbsp;
                    </td>
                }
            </tr>

            @if (!(User.IsInRole("Student")) && !(User.IsInRole("Parent")))
            {
                <tr>


                    <td>
                        <b>Paid School Fees?:</b>
                    </td>
                    <td>
                        @Html.DropDownList("paidschoolfess", SchoolManagement.Model.LevelDictionary.SchoolFeesPaymentList)
                        @*   @Html.DropDownList("term", SchoolManagement.Model.LevelDictionary.TermWithNull)*@
                        &nbsp;
                    </td>
                </tr>

            }
        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
        <br />
        <br />


        <input type="submit" value="Print Search Result" id="buttonPrint" class="btn-primary"   />
    </fieldset>


}


@*@using (Html.BeginForm("Index", "SchoolFeePayment"))
    {
        <br />
        @Html.Hidden("term")
        @Html.Hidden("session")
        @Html.Hidden("levelString")
        @Html.Hidden("SexString")
        @Html.Hidden("paidschoolfess")
        @Html.Hidden("printQuery")


        <input type="submit" value="Print Search Result" id="buttonPrint" class="btn-primary" />
    }*@
<fieldset>

    <legend><b>@ViewBag.Count Record(s) Found Amount :#@ViewBag.TotalAmount</b> </legend>

    <table class="table table-striped table-hover table-bordered table-condensed">
        <tr>
            <th>
                @Html.ActionLink("Class", "Index", new { sortOrder = ViewBag.ClassSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>


            <th>
                @Html.ActionLink("L.Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                <b>Session</b>
            </th>
            <th>
                <b>Term</b>
            </th>

            @*  <th>
                    @Html.ActionLink("Enroll.", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>



                <th>D.O.B
                </th>*@

            <th>
                @Html.ActionLink("Sex", "Index", new { sortOrder = ViewBag.GenderSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>



            @* <th>Old Record
                </th>*@

            <th>View/Make Payment for a Term</th>
            @* <th>Second Term</th>
                <th>Third Term</th>*@



        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Session)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Term)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Sex)
                </td>

                @if (User.IsInRole("Parent"))
                {
                    <td>
                        @Html.ActionLink("View Student Fee For this Term", "ViewYourFees", "SchoolFeePayment", new { id = SchoolManagement.Models.Encript.EncryptString(item.StudentID.ToString(), true), term = ViewBag.Term, session = item.Session }, null)
                        @*  @Html.ActionLink("1st Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "1" }, null)*@
                    </td>
                }
                @if (User.IsInRole("Student"))
                {
                    <td>
                        @Html.ActionLink("View Your Fee For this Term", "ViewYourFees", "SchoolFeePayment", new { id = SchoolManagement.Models.Encript.EncryptString(item.StudentID.ToString(), true), term = ViewBag.Term, session = item.Session }, null)
                        @*  @Html.ActionLink("1st Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "1" }, null)*@
                    </td>
                }
                @if (!(User.IsInRole("Parent")) && (!(User.IsInRole("Student"))))
                {

                    <td>
                        @Html.ActionLink("View/Pay Fee For this Term", "Edit", "SchoolFeePayment", new { id = SchoolManagement.Models.Encript.EncryptString(item.StudentID.ToString(), true), term = ViewBag.Term, session = item.Session }, null)
                        @*  @Html.ActionLink("1st Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "1" }, null)*@
                    </td>
                }



            </tr>
        }
    </table>
</fieldset>
<table>
    <tr>
        <td>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td></td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
        @if (Model.HasNextPage)
        {
            <td>
                @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            <td>
                @Html.Raw("&nbsp;")
            </td>
            <td>
                @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td>
                Next >
            </td>
            <td>
                @Html.Raw("&nbsp;")
            </td>
            <td>
                >>
            </td>
        }
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#printQuery").empty();
        $("#buttonPrint").click(function () {

           // alert("Hi");
            $("#printQuery").empty();
            $("#printQuery").val("True");

           // alert($("#printQuery").val());

        });

        //$("#button").button();
        //$("#tabs").tabs().width("450px");
        //$("#accordion").accordion().width("235px");

        //$("#tabs").tabs().width("750px");
        //$("#tabs1").tabs().width("750px");

    </script>
}
