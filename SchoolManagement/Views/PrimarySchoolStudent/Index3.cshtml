@*@model IEnumerable<SchoolManagement.Model.PrimarySchoolStudent>*@
@model PagedList.IPagedList<SchoolManagement.Model.PrimarySchoolStudent>
@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}

<h4>STUDENTS SCHOOL FEES</h4>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
@using (Html.BeginForm())
{
    
    <fieldset>
        <legend>Search Box</legend>

        <table>
            @*  <tr>

                <td>
                    <b>Approved:</b>
                </td>
                <td>
                    @Html.DropDownList("ApprovedString", SchoolManagement.Model.LevelDictionary.Approved)
                </td>
            </tr>*@


            <tr>

                <td>
                    <b>Find by Sex: </b>
                </td>
                <td>
                    @Html.DropDownList("SexString", SchoolManagement.Model.SexDictionary.SexDicoList)
                    &nbsp;

                </td>
            </tr>


            <tr>


                <td>
                    <b>Find by Class:</b>
                </td>
                <td>
                    @Html.DropDownList("LevelString", SchoolManagement.Model.LevelDictionary.LevelDicoList)
                    &nbsp;
                </td>
            </tr>


             <tr>

                <td>
                    <b>Class Arm:</b>
                </td>
                <td>
                    @Html.DropDownList("arm", new SelectList((System.Collections.IEnumerable)ViewData["arm"], "Value", "Text"))
                </td>
            </tr>
            <tr>

                <td>
                    <b>Find by name:</b>
                </td>
                <td>
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
                </td>
            </tr>


            <tr>


                <td>
                    <b>Find by Student ID:</b>
                </td>
                <td>
                    @Html.TextBox("StudentIDString", ViewBag.CurrentFilter as string)
                    &nbsp;
                </td>
            </tr>


            <tr>


                <td>
                    <b>Paid School Fees?:</b>
                </td>
                <td>
                    @Html.DropDownList("paidschoolfess", SchoolManagement.Model.LevelDictionary.Approved)
                    @Html.DropDownList("term", SchoolManagement.Model.LevelDictionary.TermWithNull)
                    &nbsp;
                </td>
            </tr>


        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>
   
       
}
<fieldset>

    <legend><b>@ViewBag.Count Record(s) Found</b> </legend>

   <table class="table table-striped table-hover table-bordered table-condensed">
        <tr>
            <th>
                @Html.ActionLink("Class", "Index", new { sortOrder = ViewBag.ClassSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>


            <th>
                @Html.ActionLink("L.Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            @*  <th>
            @Html.ActionLink("Enroll.", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>



        <th>D.O.B
        </th>*@

            <th>
                @Html.ActionLink("Sex", "Index", new { sortOrder = ViewBag.GenderSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>



            <th>Old Record
            </th>

            <th></th>
            <th></th>
            <th></th>



        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LevelType)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>

                @*  <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.DOB)
            </td>*@

                <td>
                    @Html.DisplayFor(modelItem => item.Sex)
                </td>

                <td>
                    @Html.ActionLink("Old Fee Record", "ViewYourFees", "PrimarySchoolStudent", new { StudentIDString = item.UserID }, null)
                </td>

                <td>
                    @Html.ActionLink("1st Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "1" }, null)
                </td>
                <td>
                    @Html.ActionLink("2nd  Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "2" }, null)
                </td>
                <td>
                    @Html.ActionLink("3rd  Term Fee Payment", "Edit", "SchoolFeePayment", new { id = item.PersonID, term = "3" }, null)


                </td>


            </tr>
        }
    </table>
</fieldset>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td>
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //$("#button").button();
        //$("#tabs").tabs().width("450px");
        //$("#accordion").accordion().width("235px");

        //$("#tabs").tabs().width("750px");
        //$("#tabs1").tabs().width("750px");

    </script>
}
