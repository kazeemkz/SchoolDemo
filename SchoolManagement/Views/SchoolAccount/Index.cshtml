@*@model IEnumerable<SchoolManagement.Model.SchoolFeesAccount>*@

@model PagedList.IPagedList<SchoolManagement.Model.SchoolAccount>

@{
    ViewBag.Title = "Index";
}

<h4>SCHOOL ACCOUNT</h4>
<br />
@*<p>
    @if (@ViewBag.CountControlCreate < 1)
    {
        @Html.ActionLink("Create Account", "Create")
    }
</p>*@
@using (Html.BeginForm())
{
   
    <fieldset>
        <legend>Search Box</legend>

        <table>


            <tr>


                <td>
                    <b>Date From:</b>
                </td>
                <td>
                    @Html.TextBox("dateFrom")
                    &nbsp;
                </td>
            </tr>

            <tr>

                <td>
                    <b>Date To:</b>
                </td>
                <td>
                    @Html.TextBox("dateTo") &nbsp;
                </td>
            </tr>



        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>
   
}
 
<fieldset>
    <legend>@ViewBag.Count Record(s) Found, Total Amount For Selected Duration - #@ViewBag.TotalAmount</legend>
<table class="table table-striped table-hover table-bordered table-condensed">
    <tr>
        <th>
            <b>Amount (NGN)</b>
        </th>
        <th>
            <b>Balance (NGN)</b>
        </th>
        <th>
            <b>Description (NGN)</b>
        </th>
        <th>
            <b>Transaction Type</b>
        </th>
        <th>
            <b>Transaction Method</b>
        </th>
        <th>
            <b>Payment For</b>
        </th>
        <th>
            <b>Teller Number</b>
        </th>
        <th>
            <b>Cheque Number</b>
        </th>
        <th>
            <b>Bank Draft Number</b>
        </th>
        <th>
            <b>POS Transaction Number</b>
        </th>
        <th>
            <b>Entered By</b>
        </th>
        <th>
            <b>Approved By</b>
        </th>
        <th>
            <b>Date Logged</b>
        </th>
        <th>
            <b>Date Approved</b>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionMethod)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TellerNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChequeNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BankDraftNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.POSTransactionNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnteredBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApprovedBy)
            </td>
            <td>
                  @string.Format("{0:dd-MMM-yyyy, hh:mm tt}",item.PaidDate)
         @*       @Html.DisplayFor(modelItem => item.PaidDate)*@
            </td>
            <td>
                 @string.Format("{0:dd-MMM-yyyy, hh:mm tt}",item.DateApproved)
          @*      @Html.DisplayFor(modelItem => item.DateApproved)*@
            </td>
            @* <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.SchoolFeesAccountID }) |
            @Html.ActionLink("Details", "Details", new { id=item.SchoolFeesAccountID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.SchoolFeesAccountID })
        </td>*@
        </tr>
    }

</table>
    </fieldset>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>
@section Scripts {
    <script src="~/Scripts/jquery-ui-1.8.24.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $("#dateTo").datepicker({
            changeMonth: true,
            changeYear: true,
            //dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });
        $("#dateFrom").datepicker({
            changeMonth: true,
            changeYear: true,
            //dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });
    </script>
}
