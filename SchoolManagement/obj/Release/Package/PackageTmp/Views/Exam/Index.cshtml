@model PagedList.IPagedList<SchoolManagement.Model.PrimarySchoolStudent>
@{
    ViewBag.Title = "Index";
    // Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}

<h4>EXAM RECORDS (LIST OF YOUR STUDENTS)</h4>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@using (Html.BeginForm())
{
    <fieldset>
        <legend>Search Box</legend>

        <table>
            @* <tr>

                    <td>
                        <b>Approved:</b>
                    </td>
                    <td>
                        @Html.DropDownList("ApprovedString", SchoolManagement.Model.LevelDictionary.Approved)
                    </td>
                </tr>*@



            @if (User.IsInRole("SuperAdmin"))
            {

                <tr>


                    <td>
                        <b>Find by Class:</b>
                    </td>
                    <td>
                        @Html.DropDownList("LevelString", SchoolManagement.Model.LevelDictionary.LevelDicoList)
                        &nbsp;
                    </td>
                </tr>
            }


            <tr>

                <td>
                    <b>Class Arm:</b>
                </td>
                <td>
                    @Html.DropDownList("arm", new SelectList((System.Collections.IEnumerable)ViewData["arm"], "Value", "Text"))
                </td>
            </tr>

            <tr>

                <td>
                    <b>Find by Sex: </b>
                </td>
                <td>
                    @Html.DropDownList("SexString", SchoolManagement.Model.SexDictionary.SexDicoList)
                    &nbsp;

                </td>
            </tr>

            <tr>

                <td>
                    <b>Find by name:</b>
                </td>
                <td>
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
                </td>
            </tr>


            <tr>


                <td>
                    <b>Find by Student ID:</b>
                </td>
                <td>
                    @Html.TextBox("StudentIDString", ViewBag.CurrentFilter as string)
                    &nbsp;
                </td>
            </tr>


        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>



    <text><b> @ViewBag.Count Record(s) Found</b></text>

}
<table class="table table-striped table-hover table-bordered table-condensed">
    <tr>
        <th>
            @*<text>Class</text>*@
            @Html.ActionLink("Class", "Index", new { sortOrder = ViewBag.ClassSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>


        <th>
            @Html.ActionLink("L.Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            @* @Html.DisplayNameFor(model => model.LastName)*@
        </th>
        <th>
            <b>ID</b>

        </th>

        @* <th>
                @Html.ActionLink("Enroll.", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>*@



        @*  <th>
                <text>D.O.B</text>
            </th>*@

        <th>
            @*<text>Gender</text>*@
            @Html.ActionLink("Sex", "Index", new { sortOrder = ViewBag.GenderSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>



        @* <th>
                <text>Approved?</text>
            </th>*@

        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LevelType)
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>

            @*<td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>*@

            <td>
                @Html.DisplayFor(modelItem => item.Sex)
            </td>

            @* <td>
                    @Html.DisplayFor(modelItem => item.IsApproved)
                </td>*@
            @if (User.IsInRole("SuperAdmin"))
            {

                <td>
                    @Html.ActionLink("Old Records", "Details", new { ids = SchoolManagement.Models.Encript.EncryptString(item.PersonID.ToString(),true) })
                </td>

            }
            @if (item.LevelType == "Graduated" || item.LevelType == "Withdraw" || item.LevelType == "Expelled" || item.LevelType == "Left")
            {

            }
            else
            {
                <td>
                    @Html.ActionLink("1st Term Result", "Edit", new { ids = SchoolManagement.Models.Encript.EncryptString(item.PersonID.ToString(),true), term = "1" })
                </td>
                <td>
                    @Html.ActionLink("2nd Term Result", "Edit", new { ids = SchoolManagement.Models.Encript.EncryptString(item.PersonID.ToString(),true), term = "2" })
                </td>
                <td>
                    @Html.ActionLink("3rd Term Result", "Edit", new { ids = SchoolManagement.Models.Encript.EncryptString(item.PersonID.ToString(),true), term = "3" })
                </td>
            }



            <td>
                @Html.ActionLink("Quiz Result", "Index", "PractiseSave", new { ids = SchoolManagement.Models.Encript.EncryptString(item.PersonID.ToString(),true) }, null)

            </td>
        </tr>
    }
</table>
<table>
    <tr>
        <td>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td>
                <<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
        @if (Model.HasNextPage)
        {
            <td>
                @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            <td>
                @Html.Raw("&nbsp;")
            </td>
            <td>
                @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td>
                Next >
            </td>
            <td>
                @Html.Raw("&nbsp;")
            </td>
            <td>
                >>
            </td>
        }
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //$("#button").button();
        //$("#tabs").tabs().width("750px");
        //$("#tabs1").tabs().width("750px");

    </script>
}
