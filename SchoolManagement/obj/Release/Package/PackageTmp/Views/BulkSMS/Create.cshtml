@model SchoolManagement.Model.BulkSMS

@{
    // Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>BULK SMS</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Bulk SMS</legend>

            <div class="editor-label">
                <b>Send SMS To Parents of a Given Class</b>
            </div>
            <div class="editor-field">

                @Html.DropDownListFor(model => model.Class, SchoolManagement.Model.LevelDictionary.LevelDicoListAllStudent) 
                @Html.ValidationMessageFor(model => model.Class)
            </div>
            <div class="editor-label">
                <b>Send SMS To Parents of a Given Class Arm</b>
            </div>
            <div class="editor-field">
                @*@Html.EditorFor(model => model.ClassParents)*@
                @Html.DropDownListFor(model => model.ClassArm, new SelectList((System.Collections.IEnumerable)ViewData["arm"], "Value", "Text")) <b>Or</b>
                @Html.ValidationMessageFor(model => model.ClassArm)
            </div>
            <div class="editor-label">
                @*@Html.LabelFor(model => model.Numbers)*@
                <b>Send SMS To  Numbers Seperated by ";"(e.g 08122334455;08045908923)</b> 
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Numbers) <b>Or</b>
                @Html.ValidationMessageFor(model => model.Numbers)
            </div>

            <div class="editor-label">
                <b>Message Body, Maximum of 160 Characters</b>
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Body)
                @Html.ValidationMessageFor(model => model.Body)
            </div>

            <p>
                <input type="submit" value="Send" class="btn-primary" />
            </p>
        </fieldset>
    }

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
</body>
</html>
