@*@model IEnumerable<SchoolManagement.Model.Order>*@
@model PagedList.IPagedList<SchoolManagement.Model.Order>

@{
    ViewBag.Title = "Orders";
    //Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}

<h4>STORE</h4>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

@using (Html.BeginForm("Index2", "Order"))
{
   
    <fieldset>
        <legend>Search Box</legend>

        <table>
            @if (Request.IsAuthenticated && HttpContext.Current.User.IsInRole("Parent"))
            {
                <tr>
                    <td>Student: </td>
                    <td> @Html.DropDownList("studentID", new SelectList((System.Collections.IEnumerable)ViewData["Students"], "Value", "Text"))</td>
                </tr>
            }

            <tr>

                <td>
                    <b>Item Bought Date:</b>
                </td>
                <td>
                    @Html.TextBox("Date")
                </td>
            </tr>

            @* <tr>

                <td>
                    <b>Find by Sex: </b>
                </td>
                <td>
                    @Html.DropDownList("SexString", SchoolManagement.Model.SexDictionary.SexDicoList)
                    &nbsp;

                </td>
            </tr>*@


        </table>
        <input type="submit" value="Search" id="button" class="btn-primary" />
        <br />
    </fieldset>
   
}
<fieldset>
    <legend>List of Your Orders</legend>
    <table class="table table-striped table-hover table-bordered table-condensed">
        <tr>

            <th>
                <b>Student ID</b>
            </th>
            <th>
                <b>Class</b>
            </th>
            <th>
                <b>Order No.</b>
            </th>
            <th>
                <b>Date</b>
            </th>
            <th>
                <b>Name</b>
            </th>
            <th>
                <b>Qty</b>
            </th>
            <th>
                <b>Amt(#)</b>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.studentID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentLastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { id=item.OrderID }) |*@
                   @* @Html.ActionLink("Details", "Index2", "OrderItem", new { id = item.OrderID }, null)*@
                       @Html.ActionLink("Details", "Index2", "OrderItem", new { id = SchoolManagement.Models.Encript.EncryptString(item.OrderID.ToString(),true)}, null)
                    @*   @Html.ActionLink("Delete", "Delete", new { id=item.OrderID })*@
                </td>
            </tr>
        }

    </table>
</fieldset>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index2", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index2", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index2", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index2", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //$("#tabs").tabs().width("780px");
        //$("#tabs1").tabs().width("780px");
        //$("#accordion").accordion().width("235px");
        $("#Date").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });
    </script>
}
